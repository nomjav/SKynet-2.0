#pragma checksum "C:\Work\Estrats\Skynet 2.0\Skynet.Web\Views\Home\_ProgressBar.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "380159e27203090b8c0141b82b9c019e576f3de4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home__ProgressBar), @"mvc.1.0.view", @"/Views/Home/_ProgressBar.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/_ProgressBar.cshtml", typeof(AspNetCore.Views_Home__ProgressBar))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Work\Estrats\Skynet 2.0\Skynet.Web\Views\_ViewImports.cshtml"
using Skynet.Web;

#line default
#line hidden
#line 2 "C:\Work\Estrats\Skynet 2.0\Skynet.Web\Views\_ViewImports.cshtml"
using Skynet.Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"380159e27203090b8c0141b82b9c019e576f3de4", @"/Views/Home/_ProgressBar.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0a3c382a9203d8a39d7ac0f9908291a86ad1608b", @"/Views/_ViewImports.cshtml")]
    public class Views_Home__ProgressBar : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/checkoutprogressbar.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 1495, true);
            WriteLiteral(@"<div class=""checkout-wrap"">
    <ul class=""checkout-bar"">

        <li class=""accepted"">
            <span class=""listElement acceptedText hiddenelement""></span>
            <span class=""listElement acceptedText"">Accepted</span>
        </li>

        <li class=""dispatched"">
            <span class=""listElement dispatchedText hiddenelement""></span>
            <span class=""listElement dispatchedText"">Dispatched</span>
        </li>

        <li class=""delayed"">
            <span class=""listElement delayedText hiddenelement""></span>
            <span class=""listElement delayedText"">Delayed</span>
        </li>

        <li class=""complete"">
            <span class=""listElement completeText hiddenelement""></span>
            <span class=""listElement completeText"">Complete</span>
        </li>

    </ul>
</div>


<input id=""progressStatus"" type=""hidden"" value="""" />
<input id=""UpdateType"" type=""hidden"" value="""" />


<style type=""text/css"">
    .hiddenelement {
        cursor: poin");
            WriteLiteral(@"ter;
        height: 19px;
        left: 40%;
        line-height: 20px;
        position: absolute;
        top: -21px;
        width: 19px;
        z-index: 99999;
    }

    .accepted {
    }

    .acceptedText {
    }

    .dispatched {
    }

    .dispatchedText {
    }

    .delayed {
    }

    .delayedText {
    }

    .complete {
    }

    .completeText {
    }

    .diabled {
    }

    .listElement {
    }
</style>
");
            EndContext();
            BeginContext(1495, 62, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "a84271205fd343f685e350fb55a27ef2", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1557, 4362, true);
            WriteLiteral(@"
<script type=""text/javascript"">
    var listElement = null;
    var isFromProgressBar = false;
    var updateInEmail = false;
    $(document).ready(function () {

        $('.checkout-bar').on(""mouseover"", "".listElement"", function () {
            if ($(this).parent('li').hasClass('disabled')) {
                $(this).css('cursor', 'not-allowed');
            }
            else {
                $(this).css('cursor', 'pointer');
            }
        });

        $('.checkout-bar').on('click', '.listElement', function () {

            isFromProgressBar = true;
            var currentStep = '';
            if ($(this).hasClass('hiddenelement')) {
                currentStep = $(this).siblings('span').text();
            }
            else {
                currentStep = $(this).text();
            }

            listElement = $(this).parent('li');
            $('#progressStatus').val(currentStep);

            if (listElement.hasClass('active')) {
                ConfirmUpdate");
            WriteLiteral(@"Action(listElement, true, $('#UpdateType').val());
            }
            else if (listElement.hasClass('visited')) {
                if ($('#UpdateType').val() == 'p' || $('#UpdateType').val() == 'pe') {
                    if (hasWebAddress == ""true"") {
                        showWebAddressDialog();
                    }
                    else {
                        showCustomerUpdateMsgBox();
                    }
                }
                else if ($('#UpdateType').val() == 'e') {
                    updateInEmail = true;
                    showCustomerUpdateMsgBox();
                }
            }
            else {
                //do nothing
            }
        });
    });

    function ConfirmUpdateAction(ctrl, isundo, updateType) {
        $(""<div></div>"").dialog({
            title: ""Please confirm"",
            buttons: [{
                text: ""Yes"",
                id: ""btnConfirm"",
                click: function () {
                    ToggleCu");
            WriteLiteral(@"stomerUpdate(ctrl, isundo, updateType);
                    $(this).dialog(""close"");
                }
            }, {
                text: ""No"",
                id: ""btnCancel"",
                click: function () {
                    $(this).dialog(""destroy"");
                }
            }],
            open: function () {
                StyleWarningDiagle($(this));
                $(this).html(""<div class='warning'><h2>Undo Update Button?</h2></div>"");
                $('#btnConfirm').removeAttr(""class"");
                $('#btnCancel').removeAttr(""class"");
                $('#btnConfirm').addClass(""btn btn-success"");
                $('#btnCancel').addClass(""btn btn-danger"");
            }
        });
    }

    function ToggleCustomerUpdate(ctrl, isundo, updateType) {
        var request = { CallSlipId: $('#CallSlipId').val(), ProgressStatus: $('#progressStatus').val(), IsUndo: isundo, UpdateType: updateType };
        $.ajax({
            type: ""POST"",
            contentTy");
            WriteLiteral(@"pe: ""application/json, charset=utf-8"",
            url: baseURL + ""Home/ToggleCustomerUpdate"",
            data: JSON.stringify(request),
            global: false,
            cache: false,
            success: function (msg) {
                var data;
                if (msg.hasOwnProperty(""d"")) {
                    data = msg.d;
                } else data = msg;
                if (data.success) {
                    if (isundo) {
                        if (ctrl.hasClass('active')) {
                            ctrl.removeClass('active');
                        }
                        ctrl.addClass('visited');
                    }
                    else {
                        if (ctrl.hasClass('visited')) {
                            ctrl.removeClass('visited');
                        }
                        ctrl.addClass('active');
                    }
                    updateInEmail = false;
                    isFromProgressBar = false;
                    //");
            WriteLiteral(@"GetEmailsLogsByCustomerId();
                } else {
                    Notify(data.message, 'error');
                }
            },
            error: function () {
                CommunicationError();
            }
        });
    }


</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
